{"version":3,"sources":["components/FeedbackOptions/feedback.module.css","components/Statistic/Statistic.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js","components/Statistics/statistics.module.css","components/App/app.module.css"],"names":["module","exports","Statistic","label","value","percents","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","className","styles","statistics","FeedbackOptions","onLeaveFeedback","btn","name","type","onClick","Section","title","children","Notification","message","App","state","countPositiveFeedbackPercentage","countTotalFeedback","toFixed","handleChange","e","target","setState","prevState","this","countPositiveFeedback","Number","container","Component","ReactDOM","render","document","querySelector"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,IAAM,wB,mJCElBC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,SAAjB,OAChB,6BACE,8BACGF,EADH,KACYC,EACTC,GAAY,sCAKnBH,EAAUI,aAAe,CACvBD,UAAU,GASGH,Q,gBCCAK,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,yBAAKC,UAAWC,IAAOC,YACrB,kBAAC,EAAD,CAAWZ,MAAM,OAAOC,MAAOI,IAC/B,kBAAC,EAAD,CAAWL,MAAM,UAAUC,MAAOK,IAClC,kBAAC,EAAD,CAAWN,MAAM,MAAMC,MAAOM,IAC9B,kBAAC,EAAD,CAAWP,MAAM,QAAQC,MAAOO,IAChC,kBAAC,EAAD,CAAWR,MAAM,oBAAoBC,MAAOQ,EAAoBP,UAAQ,M,gBC2B7DW,EAlCS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,6BACE,qDACA,4BACEJ,UAAWC,IAAOI,IAClBC,KAAK,OACLC,KAAK,SACLC,QAASJ,GAJX,QAQA,4BACEJ,UAAWC,IAAOI,IAClBC,KAAK,UACLC,KAAK,SACLC,QAASJ,GAJX,WAQA,4BACEJ,UAAWC,IAAOI,IAClBC,KAAK,MACLC,KAAK,SACLC,QAASJ,GAJX,SCRWK,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,iCACE,4BAAKD,GACJC,ICGUC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,I,gBCIrBC,E,4MACnBC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPmB,gCAAkC,WAMhC,OALiB,EAAKD,MAAdpB,KAEE,EAAKsB,qBACb,KACAC,W,EAIJC,aAAe,SAAAC,GAAM,IACXd,EAASc,EAAEC,OAAXf,KACR,EAAKgB,UAAS,SAAAC,GAAS,sBACpBjB,EAAOiB,EAAUjB,GAAQ,MAE5B,EAAKW,qBACL,EAAKD,mC,EAGPC,mBAAqB,WAAO,IAAD,EACM,EAAKF,MAEpC,OAHyB,EACjBpB,KADiB,EACXC,QADW,EACFC,K,uDAKf,IAAD,EACwB2B,KAAKT,MAA5BpB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ0B,KAAKP,qBACbQ,EAAwBC,OAC5BF,KAAKR,mCAGP,OACE,yBAAKhB,UAAWC,IAAO0B,WACrB,kBAAC,EAAD,CAASjB,MAAM,YACb,kBAAC,EAAD,CAAiBN,gBAAiBoB,KAAKL,gBAGzC,kBAAC,EAAD,CAAST,MAAM,aACZf,GAAQC,GAAWC,EAClB,kBAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoB0B,IAGtB,kBAAC,EAAD,CAAcZ,QAAQ,4B,GAtDDe,aCHjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W,kBCHhD7C,EAAOC,QAAU,CAAC,WAAa,iC,kBCA/BD,EAAOC,QAAU,CAAC,UAAY,0B","file":"static/js/main.9915fb17.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"feedback_btn__2QONT\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistic = ({ label, value, percents }) => (\r\n  <div>\r\n    <span>\r\n      {label}: {value}\r\n      {percents && <span>%</span>}\r\n    </span>\r\n  </div>\r\n);\r\n\r\nStatistic.defaultProps = {\r\n  percents: false,\r\n};\r\n\r\nStatistic.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n  percents: PropTypes.bool,\r\n};\r\n\r\nexport default Statistic;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Statistic from '../Statistic/Statistic';\r\nimport styles from './statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div className={styles.statistics}>\r\n    <Statistic label=\"Good\" value={good} />\r\n    <Statistic label=\"Neutral\" value={neutral} />\r\n    <Statistic label=\"Bad\" value={bad} />\r\n    <Statistic label=\"Total\" value={total} />\r\n    <Statistic label=\"Positive feedback\" value={positivePercentage} percents />\r\n  </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './feedback.module.css';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\r\n  <div>\r\n    <h2>Please leave feedback</h2>\r\n    <button\r\n      className={styles.btn}\r\n      name=\"good\"\r\n      type=\"button\"\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      Good\r\n    </button>\r\n    <button\r\n      className={styles.btn}\r\n      name=\"neutral\"\r\n      type=\"button\"\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      Neutral\r\n    </button>\r\n    <button\r\n      className={styles.btn}\r\n      name=\"bad\"\r\n      type=\"button\"\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      Bad\r\n    </button>\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\nimport Section from '../Section/Section';\r\nimport Notification from '../Notification/Notification';\r\nimport styles from './app.module.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    const countPositiveFeedback = (\r\n      (good / this.countTotalFeedback()) *\r\n      100\r\n    ).toFixed();\r\n    return countPositiveFeedback;\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name } = e.target;\r\n    this.setState(prevState => ({\r\n      [name]: prevState[name] + 1,\r\n    }));\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const countPositiveFeedback = Number(\r\n      this.countPositiveFeedbackPercentage(),\r\n    );\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <Section title=\"Feedback\">\r\n          <FeedbackOptions onLeaveFeedback={this.handleChange} />\r\n        </Section>\r\n\r\n        <Section title=\"Statistic\">\r\n          {good || neutral || bad ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={countPositiveFeedback}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__JaOZU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__1wYuM\"};"],"sourceRoot":""}